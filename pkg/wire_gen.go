// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package quadlek

import (
	"context"
	"github.com/jirwin/quadlek/pkg/bot"
	"github.com/jirwin/quadlek/pkg/data_store/boltdb"
	"github.com/jirwin/quadlek/pkg/plugin_manager"
	"github.com/jirwin/quadlek/pkg/slack_manager"
	"github.com/jirwin/quadlek/pkg/slack_manager/client"
	"github.com/jirwin/quadlek/pkg/uzap"
	"github.com/jirwin/quadlek/pkg/webhook_manager"
)

// Injectors from wire.go:

func NewQuadlek(ctx context.Context) (*bot.QuadlekBot, error) {
	config, err := bot.NewConfig()
	if err != nil {
		return nil, err
	}
	uzapConfig, err := uzap.NewConfig()
	if err != nil {
		return nil, err
	}
	logger, err := uzap.New(uzapConfig)
	if err != nil {
		return nil, err
	}
	slack_managerConfig, err := slack_manager.NewConfig()
	if err != nil {
		return nil, err
	}
	clientConfig, err := client.NewConfig()
	if err != nil {
		return nil, err
	}
	slackHttpClient := &client.slackHttpClient{}
	slackClientImpl, err := client.NewSlackClient(clientConfig, logger, slackHttpClient)
	if err != nil {
		return nil, err
	}
	managerImpl, err := slack_manager.New(logger, slack_managerConfig, slackClientImpl)
	if err != nil {
		return nil, err
	}
	plugin_managerConfig, err := plugin_manager.NewConfig()
	if err != nil {
		return nil, err
	}
	plugin_managerManagerImpl := &plugin_manager.ManagerImpl{
		C: plugin_managerConfig,
		L: logger,
	}
	webhook_managerConfig, err := webhook_manager.NewConfig()
	if err != nil {
		return nil, err
	}
	webhook_managerManagerImpl, err := webhook_manager.New(webhook_managerConfig, logger, plugin_managerManagerImpl)
	if err != nil {
		return nil, err
	}
	boltdbConfig, err := boltdb.NewConfig()
	if err != nil {
		return nil, err
	}
	boltDbStore, err := boltdb.New(boltdbConfig, logger)
	if err != nil {
		return nil, err
	}
	quadlekBot, err := bot.New(config, logger, managerImpl, plugin_managerManagerImpl, webhook_managerManagerImpl, boltDbStore)
	if err != nil {
		return nil, err
	}
	return quadlekBot, nil
}
